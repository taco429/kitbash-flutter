version: '3.8'

# Docker Compose override for debugging and development
# Usage: docker-compose -f docker-compose.yml -f docker-compose.debug.yml up

services:
  backend:
    environment:
      # Enhanced logging for debugging
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=json
      - LOG_OUTPUT=stdout
      # CORS for development
      - CORS_ORIGINS=*
    # Mount scripts for easy access
    volumes:
      - ./backend/scripts:/scripts:ro
    # Enable logging driver for better log management
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=kitbash-backend"
    # Add labels for easier identification
    labels:
      - "kitbash.service=backend"
      - "kitbash.environment=debug"
      - "kitbash.version=dev"
    # Health check override with more frequent checks
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Optional: Add a log aggregator for development
  logs:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - default
    labels:
      - "kitbash.service=logs"
      - "kitbash.environment=debug"

  # Optional: Add Grafana for log visualization
  grafana:
    image: grafana/grafana:10.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./backend/monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    networks:
      - default
    labels:
      - "kitbash.service=grafana"
      - "kitbash.environment=debug"
    depends_on:
      - logs

volumes:
  loki-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: kitbash-debug
